// Generated by view binder compiler. Do not edit!
package com.st.stmusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.st.stmusic.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TestlayoutsilBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final ImageView imgSongImageHover;

  @NonNull
  public final TextView txtArtistSongs2;

  @NonNull
  public final TextView txtSongName3;

  private TestlayoutsilBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView imageView2,
      @NonNull ImageView imageView3, @NonNull ImageView imageView4,
      @NonNull ImageView imgSongImageHover, @NonNull TextView txtArtistSongs2,
      @NonNull TextView txtSongName3) {
    this.rootView = rootView;
    this.imageView2 = imageView2;
    this.imageView3 = imageView3;
    this.imageView4 = imageView4;
    this.imgSongImageHover = imgSongImageHover;
    this.txtArtistSongs2 = txtArtistSongs2;
    this.txtSongName3 = txtSongName3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TestlayoutsilBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TestlayoutsilBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.testlayoutsil, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TestlayoutsilBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.imgSongImageHover;
      ImageView imgSongImageHover = ViewBindings.findChildViewById(rootView, id);
      if (imgSongImageHover == null) {
        break missingId;
      }

      id = R.id.txtArtistSongs2;
      TextView txtArtistSongs2 = ViewBindings.findChildViewById(rootView, id);
      if (txtArtistSongs2 == null) {
        break missingId;
      }

      id = R.id.txtSongName3;
      TextView txtSongName3 = ViewBindings.findChildViewById(rootView, id);
      if (txtSongName3 == null) {
        break missingId;
      }

      return new TestlayoutsilBinding((ConstraintLayout) rootView, imageView2, imageView3,
          imageView4, imgSongImageHover, txtArtistSongs2, txtSongName3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
